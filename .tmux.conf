# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-f
bind-key C-f send-prefix
# split panes using s and v in the same directory
# bind s split-window -v -c '#{pane_current_path}' 
# bind v split-window -h -c '#{pane_current_path}'

bind \\ split-window -h -c '#{pane_current_path}' 
bind | split-window -fh -c '#{pane_current_path}' 
bind - split-window -v -c '#{pane_current_path}' 
bind _ split-window -fv -c '#{pane_current_path}' 

# new window in the same path
bind c new-window -c '#{pane_current_path}'

# make delay shorter
set -g escape-time 5
# switch panes using Alt-arrow without prefix
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

#Sending th preix to Other applicaion (commands like C-l in tmux and bash)
#bind C-l send-prefix

# resize windows -r repeat limit
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r K resize-pane -U 5
bind -r J resize-pane -D 5
# don't rename windows automatically
set-option -g allow-rename off
#terminal color
#set -g default-terminal "tmux-j56color"
# change color message
# set -g status-bg colour40
# set -g status-fg black
# center window list
#set -g status-justify centre
# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

# synchronize all panes in a window
bind y setw synchronize-panes

# enable mouse support for switching panes/windows
# set -g mouse-utf8 on
# set -g mouse on

#set inactive/active window styles
# set -g window-style 'fg=default,bg=colour236'
# set -g window-active-style 'fg=colour247,bg=colour234'
# set -g pane-active-border-style bg=colour0
set -g default-terminal "screen-256color"

###Command line
# Let’s change the background color to red and the text color to white. We’ll
#use a bright white so the message stands out in more detail.
set -g message-style fg=white
set -g message-style bg=red
set -g message-style bright

# window and panels base index will start at 1
set -g base-index 1
set -g pane-base-index 1
#### copy mode : vim ####

# set vi mode for copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux save-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer"
unbind-key -T copy-mode-vi Space ; bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter ; bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v   ; bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [     ; bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]     ; bind-key -T copy-mode-vi ] send-keys -X copy-selection

# display time of panes
set -g display-panes-time 2000
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind C-l send-keys 'C-l'

set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
# Initialize TMUX plugin manager 
run '~/.tmux/plugins/tpm/tpm' 
